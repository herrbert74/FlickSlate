[versions]

#common configuration

versionCode = "1"
versionName = "1.0"
minSdkVersion = "26"
compileSdkVersion = "36"
targetSdkVersion = "36"

#platform

androidGradlePlugin = "8.13.0"
#androidGradlePlugin = "7.3.1" # For IntelliJ plugin runIde
coroutines = "1.10.2"
jdk = "21"
kotlin = "2.2.20"
kotlinx-collections = "0.4.0"
#kotlinx-datetime = "0.7.1-0.6.x-compat"
kotlinx-serialization = "1.9.0"
ksp = "2.3.0"

#other

androidx-activity = "1.11.0"
#androidx-appcompat = "1.7.1"
androidx-composeBom = "2025.10.00"
androidx-composeMaterial3 = "1.4.0-alpha17" #For alpha releases only
androidx-composeUi = "1.9.3" #For test libs not in the BOM
androidx-lifecycle = "2.9.4"
androidx-navigation = "2.9.5"
androidx-hilt = "1.3.0"
androidx-paletteKtx = "1.0.0"
androidx-room = "2.8.2"
androidx-testCore = "1.7.0"
androidx-testExtJUnit = "1.3.0"
androidx-testRules = "1.6.1"
androidx-testRunner = "1.7.0"
androidx-testEspresso = "3.7.0"
#androidx-work = "2.9.1"
autoBind = "2.1.0"
babestudios-base = "3.2.1"
buildKonfig = "0.17.1"
compose-screenshotTesting = "0.0.1-alpha11"
#chucker = "4.0.0"
coil = "2.7.0"
#crashlyticsPlugin = "3.0.4"
dagger = "2.57.2"
#decompose = "3.3.0"
dependencyAnalysis = "3.3.0"
detekt = "1.23.8"
detekt-compose = "0.4.27"
#diamondedge-logging = "2.0.3"
#essenty = "2.5.0"
#facebook = "16.1.2"
#firebaseBom = "33.16.0"
gradleDoctor = "0.11.0"
#graphql = "4.3.1"
guava = "33.5.0-jre"
#jakarta-inject = "2.0.1"
#javaPoet = "1.13.0"
jUnit = "4.13.2"
jUnit5 = "5.13.4"
#koin = "4.1.0"
kotest = "6.0.4"
kotlinResult = "1.1.21"
kotlinRetry = "2.0.2"
#ktor = "3.2.1"
#ktorfit = "2.6.1"
mockk = "1.14.6"
#mokkery = "2.9.0"
#multiplatform-settings = "1.3.0"
#mviKotlin = "4.3.0"
okhttp = "5.2.1"
#parcelize-darwin = "0.2.4"
retrofit = "3.0.0"
robolectric = "4.16"
#skie = "0.10.4"
#uri-kmp = "0.0.20"

[libraries]

android-screenshotValidationApi = { module = "com.android.tools.screenshot:screenshot-validation-api", version.ref = "compose-screenshotTesting" }

androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
#androidx-activityKtx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-annotation = "androidx.annotation:annotation:1.9.1"
#androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
#androidx-appCompatResources = { group = "androidx.appcompat", name = "appcompat-resources", version.ref = "androidx-appcompat" }
#androidx-browser = "androidx.browser:browser:1.8.0"
#androidx-cardView = "androidx.cardview:cardview:1.0.0"
#androidx-collection = "androidx.collection:collection:1.5.0"

androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-composeBom" }

androidx-composeAnimation = { module = "androidx.compose.animation:animation" }
androidx-composeAnimationCore = { module = "androidx.compose.animation:animation-core" }
androidx-composeFoundation = { module = "androidx.compose.foundation:foundation" }
androidx-composeFoundationLayout = { module = "androidx.compose.foundation:foundation-layout" }
#androidx-composeFoundationLayoutAndroid = { module = "androidx.compose.foundation:foundation-layout-android" }
androidx-composeRuntime = { module = "androidx.compose.runtime:runtime" }
androidx-composeRuntimeAnnotation = { module = "androidx.compose.runtime:runtime-annotation" }
androidx-composeRuntimeSaveable = { module = "androidx.compose.runtime:runtime-saveable" }
androidx-composeMaterialIconsCore = { module = "androidx.compose.material:material-icons-core" }

androidx-composeUi = { group = "androidx.compose.ui", name = "ui" }
androidx-composeUiGraphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-composeUiGeometry = { group = "androidx.compose.ui", name = "ui-geometry" }
androidx-composeUiText = { group = "androidx.compose.ui", name = "ui-text" }
androidx-composeUiTest = { group = "androidx.compose.ui", name = "ui-test" }
androidx-composeUiTestJunit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-composeUiTestManifest = { group = "androidx.compose.ui", name = "ui-test-manifest" } #For adding Activities
androidx-composeUiTooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-composeUiToolingPreview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-composeUiUnit = { group = "androidx.compose.ui", name = "ui-unit" }
androidx-composeUiUtil = { group = "androidx.compose.ui", name = "ui-util" }

#Not in BOM as of 2023.10.01 !!!
androidx-composeUiTestAndroid = { group = "androidx.compose.ui", name = "ui-test-android", version.ref = "androidx-composeUi" }
androidx-composeUiTestJunit4Android = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "androidx-composeUi" } #createComposeRule

#In BOM, but alpha is often needed
#androidx-composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-composeMaterial3" }
androidx-composeMaterial3 = { module = "androidx.compose.material3:material3" }

#androidx-constraintLayout = "androidx.constraintlayout:constraintlayout:2.1.4"
#androidx-constraintLayoutCompose = "androidx.constraintlayout:constraintlayout-compose-android:1.1.0-rc01"

#androidx-core = "androidx.core:core:1.13.1" #Bundle
androidx-coreKtx = "androidx.core:core-ktx:1.17.0" #Bundle

#androidx-datastore = "androidx.datastore:datastore-preferences:1.1.1"
androidx-fragmentKtx = "androidx.fragment:fragment-ktx:1.8.9"

androidx-hiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-hilt" }
#androidx-hiltWork = { module = "androidx.hilt:hilt-work", version.ref = "androidx-hilt" }
#androidx-hiltNavigation = { module = "androidx.hilt:hilt-navigation", version.ref = "androidx-hilt" }
androidx-hiltLifeCycleViewModelCompose = { module = "androidx.hilt:hilt-lifecycle-viewmodel-compose", version.ref = "androidx-hilt" }
#androidx-hiltNavigationFragment = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "androidx-hilt" }

androidx-lifecycleCommon = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx-lifecycle" }
#androidx-lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycleRuntimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
#androidx-lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-lifecycleViewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycleViewmodelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycleViewmodelSavedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
#androidx-lifecycleViewmodelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }

#androidx-media = "androidx.media:media:1.7.0"
#androidx-mediaRouter = "androidx.mediarouter:mediarouter:1.7.0"

androidx-navigationCommon = { module = "androidx.navigation:navigation-common", version.ref = "androidx-navigation" }
androidx-navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
#androidx-navigationFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-navigationRuntime = { module = "androidx.navigation:navigation-runtime", version.ref = "androidx-navigation" }
#androidx-navigationTesting = { module = "androidx.navigation:navigation-testing", version.ref = "androidx-navigation" }
#androidx-navigationUiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx-navigation" }

androidx-paletteKtx = { group = "androidx.palette", name = "palette-ktx", version.ref = "androidx-paletteKtx" }
#androidx-preferenceKtx = "androidx.preference:preference-ktx:1.2.1"
#androidx-recyclerView = "androidx.recyclerview:recyclerview:1.3.2"

androidx-roomCommon = { module = "androidx.room:room-common", version.ref = "androidx-room" }
androidx-roomCompiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
#androidx-roomKtx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-roomRuntime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
#androidx-roomTesting = { module = "androidx.room:room-testing", version.ref = "androidx-room" }

#androidx-savedState  = "androidx.savedstate:savedstate:1.2.1"
##androidx-splash = "androidx.core:core-splashscreen:1.0.1"
#androidx-startup = "androidx.startup:startup-runtime:1.2.0"
androidx-sqlite = "androidx.sqlite:sqlite:2.6.1"
#androidx-swipeRefreshLayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
#androidx-viewPager2 = "androidx.viewpager2:viewpager2:1.1.0"

#androidx-window = "androidx.window:window:1.3.0"
#androidx-workmanagerKtx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-work" }
#androidx-workmanagerTesting = { module = "androidx.work:work-testing", version.ref = "androidx-work" }

androidx-testCore = { group = "androidx.test", name = "core", version.ref = "androidx-testCore" }
androidx-testCoreKtx = { module = "androidx.test:core-ktx", version.ref = "androidx-testCore" }
#androidx-testEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-testEspresso" }
#androidx-testEspressoContrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidx-test-espresso" }
#androidx-testEspressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidx-test-espresso" }
androidx-testExtJUnit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExtJUnit" }
#androidx-testExtJUnitKtx = "androidx.test.ext:junit-ktx:1.2.1"
androidx-testRunner = { module = "androidx.test:runner", version.ref = "androidx-testRunner" }
#androidx-testOrchestrator = "androidx.test:orchestrator:1.5.1"
#androidx-testRules = { module = "androidx.test:rules", version.ref = "androidx-testRules" }
#androidx-testUiAutomator = "androidx.test.uiautomator:uiautomator:2.3.0"

autobind-core = { module = "se.ansman.dagger.auto:core", version.ref = "autoBind" } # For Kotlin modules
#autobind-android = { module = "se.ansman.dagger.auto:android", version.ref = "autoBind" }
autobind-android-api = { module = "se.ansman.dagger.auto:android-api", version.ref = "autoBind" }
autobind-android-testing = { module = "se.ansman.dagger.auto:android-testing", version.ref = "autoBind" }
autobind-compiler = { module = "se.ansman.dagger.auto:compiler", version.ref = "autoBind" }

#baBeStudios-baseKotlin = { module ="io.bitbucket.babestudios:base-kotlin", version.ref = "babestudios-base"}
baBeStudios-baseData = { module ="io.bitbucket.babestudios:base-data", version.ref = "babestudios-base"}
#baBeStudios-baseAndroid = { module ="io.bitbucket.babestudios:base-android", version.ref = "babestudios-base"}
#baBeStudios-baseCompose = { module ="io.bitbucket.babestudios:base-compose", version.ref = "babestudios-base"}

#chucker-library = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
#chucker-noop = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }

coil-base = { module = "io.coil-kt:coil-base", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-compose-base = { module = "io.coil-kt:coil-compose-base", version.ref = "coil" }

dagger-core = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-hiltCore = { module = "com.google.dagger:hilt-core", version.ref = "dagger" }
dagger-hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-hiltAndroidTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }
dagger-hiltCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }

#decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
#decompose-extensions = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

#detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
#detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
#detekt-test = { module = "io.gitlab.arturbosch.detekt:detekt-test", version.ref = "detekt" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-compose" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

#diamondedge-logging = { module = "com.diamondedge:logging", version.ref = "diamondedge-logging" }

#essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
#essenty-backHandler = { module = "com.arkivanov.essenty:back-handler", version.ref = "essenty" }
#essenty-instanceKeeper = { module = "com.arkivanov.essenty:instance-keeper", version.ref = "essenty" }
#essenty-stateKeeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }

#gson = "com.google.code.gson:gson:2.13.1"

guava-jre = { module = "com.google.guava:guava", version.ref = "guava" }

#googlePlay-appUpdateKtx = "com.google.android.play:app-update-ktx:2.1.0"
#googlePlay-servicesAnalytics = "com.google.android.gms:play-services-analytics:18.1.1"
#googlePlay-servicesLocation = "com.google.android.gms:play-services-location:21.3.0"
#googlePlay-servicesMaps = "com.google.android.gms:play-services-maps:19.2.0"
#googlePlay-servicesMapsCompose = "com.google.maps.android:maps-compose:6.6.0"
#googlePlay-servicesAds = "com.google.android.gms:play-services-ads:24.4.0"
#googlePlay-servicesAuth = "com.google.android.gms:play-services-auth:20.2.0"
#googlePlay-servicesTagManager = "com.google.android.gms:play-services-tagmanager:18.0.1"
#googlePlay-servicesCast = "com.google.android.gms:play-services-cast-framework:21.1.0"

#facebook-core = { module = "com.facebook.android:facebook-core", version.ref = "facebook" }
#facebook-login = { module = "com.facebook.android:facebook-login", version.ref = "facebook" }

#firebaseBom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }

#firebaseAnalytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
#firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
#firebaseDatabase = { module = "com.google.firebase:firebase-database-ktx" }
#firebaseConfig = { module = "com.google.firebase:firebase-config-ktx" }

#graphql-runtime = { module = "com.apollographql.apollo:apollo-runtime", version.ref = "graphql" }

#https://github.com/android/android-test/issues/1352
#hamcrest = "org.hamcrest:hamcrest-core:1.3"

inject = "javax.inject:javax.inject:1"

#jakarta-inject = {module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject"}

#javaPoet = { module = "com.squareup:javapoet", version.ref = "javaPoet" } ":1.13.0"

jUnit = { group = "junit", name = "junit", version.ref = "jUnit" }
#jUnit5-jupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jUnit5" }
#jUnit5-jupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jUnit5" }
#jUnit5-jupiterParams = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jUnit5" }
#jUnit5-vintageEngine = { module = "org.junit.jupiter:junit-vintage-engine", version.ref = "jUnit5" }

#klock = "com.soywiz.korlibs.klock:klock:4.0.10"

#koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
#koin-test = { group = "io.insert-koin", name = "koin-test", version.ref = "koin" }
#koin-junit4 = { group = "io.insert-koin", name = "koin-test-junit4", version.ref = "koin" }
#koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
#koin-androidTest = { group = "io.insert-koin", name = "koin-android-test", version.ref = "koin" }

#kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertionsShared = { module = "io.kotest:kotest-assertions-shared", version.ref = "kotest" }
#kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }

#kotlin-compilerEmbeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }
kotlin-parcelizeRuntime = { module = "org.jetbrains.kotlin:kotlin-parcelize-runtime", version.ref = "kotlin" }
#kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
#kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
#kotlin-testJUnit = { module = "org.jetbrains.kotlin:kotlin-test-jUnit", version.ref = "kotlin" }

kotlinResult-result = { module = "com.michael-bull.kotlin-result:kotlin-result", version.ref = "kotlinResult" }
kotlinResult-coroutines = { module = "com.michael-bull.kotlin-result:kotlin-result-coroutines", version.ref = "kotlinResult" }
kotlinRetry = { module = "com.michael-bull.kotlin-retry:kotlin-retry", version.ref = "kotlinRetry" }

#kotlinx-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-collectionsImmutableJvm = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm", version.ref ="kotlinx-collections" }
#kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serializationCore = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

#ktor-clientAndroid = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
#ktor-clientAuth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
#ktor-clientCore = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
#ktor-clientLogging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
#ktor-clientOkhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
#ktor-clientDarwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
#ktor-clientMock = { group = "io.ktor", name = "ktor-client-mock", version.ref = "ktor" }
#ktor-clientContentNegotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
#ktor-http = { group = "io.ktor", name = "ktor-http", version.ref = "ktor" }
#ktor-io = { group = "io.ktor", name = "ktor-io", version.ref = "ktor" }
#ktor-serializationKotlinxJson = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
#ktor-serialization = { group = "io.ktor", name = "ktor-serialization", version.ref = "ktor" }
#ktor-utils = { group = "io.ktor", name = "ktor-utils", version.ref = "ktor" }

#ktorfit-annotations = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-annotations", version.ref = "ktorfit"}
#ktorfit-lib = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-lib", version.ref = "ktorfit"}
#ktorfit-libLight = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-lib-light", version.ref = "ktorfit"}

#leakCanary = "com.squareup.leakcanary:leakcanary-android:2.14"

#lottie = "com.airbnb.android:lottie:6.6.7"

#mvikotlin-core = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mviKotlin" }
#mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mviKotlin" }
#mvikotlin-rx = { module = "com.arkivanov.mvikotlin:rx", version.ref = "mviKotlin" }
#mvikotlin-rxInternal = { module = "com.arkivanov.mvikotlin:rx-internal", version.ref = "mviKotlin" }
#mvikotlin-utilsInternal = { module = "com.arkivanov.mvikotlin:utils-internal", version.ref = "mviKotlin" }
#mvikotlin-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mviKotlin" }
#mvikotlin-logging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mviKotlin" }

mockk-core = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-dsl = { module = "io.mockk:mockk-dsl", version.ref = "mockk" }

#multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
#multiplatformSettings-noargs = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }

okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp3-mockWebServer = { module = "com.squareup.okhttp3:mockwebserver3", version.ref = "okhttp" }
okhttp3-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

#parcelize-darwin-runtime = { module = "com.arkivanov.parcelize.darwin:runtime", version.ref = "parcelize-darwin" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
#retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }
#retrofit-converterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-converterKotlinxSerialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit" }
#retrofit-converterSimpleXml = { module = "com.squareup.retrofit2:converter-simplexml", version.ref = "retrofit" }
#retrofit-converterMoshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

#revenueCat = "com.revenuecat.purchases:purchases:6.9.4"

robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
robolectric-annotations = { module = "org.robolectric:annotations", version.ref = "robolectric" }

#uriKmp = { module = "com.eygraber:uri-kmp", version.ref = "uri-kmp" }

timber = "com.jakewharton.timber:timber:5.0.1"

#Typically used to add declaration for api dependencies, e.g. test-mockk-dsl
[bundles]
#mockk-unit = ["test-mockk-core", "mockk-dsl"]
#mockk-android = ["test-mockk-android", "test-mockk-core", "mockk-dsl"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidGradlePlugin" }
#androidKotlinMultiPlatformLibrary = { id = "com.android.kotlin.multiplatform.library", version.ref = "androidGradlePlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" }
#buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
compose-screenshotTesting = { id = "com.android.compose.screenshot", version.ref = "compose-screenshotTesting" }
#crashlytics = { id = "com.google.firebase.crashlytics", version = "3.0.2" }
dagger-hiltAndroid = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysis" } #fine-grained plugin
#dependencyAnalysisBuildHealth = { id = "com.autonomousapps.build-health", version.ref = "dependency-analysis" } #settings plugin
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
#gradleDoctor = { id = "com.osacky.doctor", version.ref = "gradleDoctor" }
#graphql = { id = "com.apollographql.apollo", version.ref = "graphql" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
#kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
#ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
#mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
#parcelize-darwin = { id = "com.arkivanov.parcelize.darwin", version.ref = "parcelize-darwin" }
#touchlab-skie = { id = "co.touchlab.skie", version.ref = "skie" }

# This is replaced by KGP, but KGP generates empty files for Android modules as of 2.2.10:
# https://kotlinlang.org/docs/gradle-binary-compatibility-validation.html
binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version = "0.18.1" }
